// .upload-item__title এলিমেন্টে থাকা ফাইল আইডি ও ফাইল নাম সংগ্রহ করা
const displayBox = document.createElement('div');
displayBox.id = 'file-info-box';
displayBox.style = `position: fixed; top: 10px; left: 10px; width: 300px; border: 1px solid #ccc; background: #f9f9f9; resize: both; box-sizing: border-box; z-index: 9999; font-family: Arial, sans-serif; font-size: 14px; display: none;`;

const dragHandle = document.createElement('div');
dragHandle.style = `height: 20px; background-color: #ddd; cursor: move; margin-bottom: 5px;`;
displayBox.appendChild(dragHandle);

const textarea = document.createElement('textarea');
textarea.style = `width: 100%; height: 130px; padding: 10px; border: none; box-sizing: border-box;`;
displayBox.appendChild(textarea);
document.body.appendChild(displayBox);

const buttonContainer = document.createElement('div');
buttonContainer.style = `position: fixed; top: 10px; left: 10px; display: flex; flex-direction: column; z-index: 10000; padding: 10px;`;

const recordButton = document.createElement('button');
recordButton.textContent = 'Start';
recordButton.style = `padding: 10px 20px; font-size: 16px; background-color: #4CAF50; color: #fff; cursor: pointer; margin-bottom: 10px; border-radius: 5px;`;
buttonContainer.appendChild(recordButton);

const stopButton = document.createElement('button');
stopButton.textContent = 'Stop';
stopButton.style = `padding: 10px 20px; font-size: 16px; background-color: #f44336; color: #fff; cursor: pointer; margin-bottom: 10px; border-radius: 5px;`;
stopButton.disabled = true;
buttonContainer.appendChild(stopButton);
document.body.appendChild(buttonContainer);

let isDragging = false, offsetX, offsetY, isRecording = false, collectedData = [], intervalId;

dragHandle.addEventListener('mousedown', e => { isDragging = true; offsetX = e.clientX - displayBox.offsetLeft; offsetY = e.clientY - displayBox.offsetTop; });
document.addEventListener('mousemove', e => { if (isDragging) { displayBox.style.left = e.clientX - offsetX + 'px'; displayBox.style.top = e.clientY - offsetY + 'px'; } });
document.addEventListener('mouseup', () => { isDragging = false; });

recordButton.addEventListener('click', () => {
    if (isRecording) return;
    isRecording = true; recordButton.disabled = true; stopButton.disabled = false;
    displayBox.style.display = 'none'; collectedData = [];
    intervalId = setInterval(() => {
        document.querySelectorAll('.upload-item__title').forEach(item => {
            const id = item.querySelector('strong').innerText;
            const decodedFileName = decodeURIComponent(item.querySelector('.js-filenamefull').dataset.text);
            if (!collectedData.some(data => data.id === id && data.fileName === decodedFileName)) {
                collectedData.push({ id, fileName: decodedFileName });
            }
        });
    }, 500);
});

stopButton.addEventListener('click', () => {
    isRecording = false; recordButton.disabled = false; stopButton.disabled = true;
    clearInterval(intervalId);
    displayBox.style.display = 'block';
    textarea.value = collectedData.map(item => `ID: ${item.id}, File Name: ${item.fileName}`).join('\n');
    buttonContainer.style.display = 'none';
});
